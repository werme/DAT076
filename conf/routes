
# Home
GET     /                       controllers.Application.index()

# Notes

GET     /notes                  			controllers.Notes.list()
POST    /notes                  			controllers.Notes.newNote()
GET     /note/:id               			controllers.Notes.show(id: Long)
POST    /note/:id/delete        			controllers.Notes.delete(id: Long)
GET     /note/:id/delete        			controllers.Notes.delete(id: Long)
POST    /note/:id/comments      			controllers.Notes.newComment(id: Long)
POST    /note/:id/comments/:comments_id     controllers.Notes.deleteComment(id: Long, comments_id: Long)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file           controllers.Assets.at(path="/public", file)

# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling 
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized
